<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>opensilex-core</artifactId>
    <packaging>jar</packaging>
    <name>opensilex-core</name>
    
    <url>https://www.opensilex.org/</url>
    
    <parent>
        <groupId>org.opensilex</groupId>
        <artifactId>opensilex-parent</artifactId>
        <version>${revision}</version>
        <relativePath>../opensilex-parent/pom.xml</relativePath>
    </parent>
    
    <dependencies>
        <!-- OpenSilex Base -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex Base test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
    </dependencies>
    
    <build>
        <resources>
            <resource>
                <directory>front</directory>
                <excludes>
                    <exclude>**</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- Check plugin and dependencies available updates -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <configuration>
                    <rulesUri>classpath:///version-rules.xml</rulesUri>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.opensilex</groupId>
                        <artifactId>opensilex</artifactId>
                        <version>${revision}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- Generate swagger.json file -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>org.opensilex.server.rest.SwaggerAPIGenerator</mainClass>
                    <arguments>
                        <argument>${project.basedir}/src/main/java/</argument>
                        <argument>${project.basedir}/front/lib/swagger.json</argument>
                    </arguments>
                </configuration>
            </plugin>
            <!-- Generate TypeScript library from swagger.json file -->
            <plugin>
                <groupId>org.opensilex</groupId>
                <artifactId>opensilex-swagger-codegen-maven-plugin</artifactId>
                <version>${revision}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/front/lib/swagger.json</inputSpec>
                            <templateDirectory>${project.basedir}/../opensilex/src/main/resources/swagger/templates/typescript-inversify</templateDirectory>
                            <language>typescript-inversify</language>
                            <output>${project.basedir}/front/lib/${project.name}</output>
                            <configOptions>
                                <packageName>${project.name}</packageName>
                                <packageVersion>${revision}</packageVersion>
                                <npmName>${project.name}</npmName>
                                <modelPropertyNaming>original</modelPropertyNaming>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend.maven.plugin.version}</version>
                        
                <executions>
                    <execution>
                        <id>install lib dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <configuration>
                            <arguments>--network-timeout 1000000 install</arguments>
                            <workingDirectory>front/lib/${project.name}</workingDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

