<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
******************************************************************************
 OpenSILEX - Licence AGPL V3.0 - https://www.gnu.org/licenses/agpl-3.0.en.html
 Copyright Â© INRA 2019
 Contact: vincent.migot@inra.fr, anne.tireau@inra.fr, pascal.neveu@inra.fr
 
 OpenSilex Module pom.xml
 This abstract module is used as parent module for all OpenSilex extensions
 It brings Maven build for integration with OpenSilex and dependencies to:
 - opensilex
 - opensilex-core
 - opensilex-front
******************************************************************************
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>opensilex-module</artifactId>
    <packaging>pom</packaging>

    <name>opensilex-module</name>

    <url>https://www.opensilex.org/</url>

    <parent>
        <groupId>org.opensilex</groupId>
        <artifactId>opensilex-parent</artifactId>
        <version>${revision}</version>
        <relativePath>../opensilex-parent/pom.xml</relativePath>
    </parent>
    
    <dependencies>
        <!-- OpenSilex Base -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex Base test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- OpenSilex SPARQL -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-sparql</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex SPARQL test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-sparql</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- OpenSilex NOSQL -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-nosql</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex NOSQL test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-nosql</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- OpenSilex File System -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-fs</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex File System test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-fs</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- OpenSilex Core -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-core</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex Core test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-core</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- OpenSilex Front -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-front</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex Front test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-front</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
        <!-- OpenSilex REST -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-rest</artifactId>
            <version>${revision}</version>
        </dependency>
        <!-- OpenSilex REST test -->
        <dependency>
            <groupId>org.opensilex</groupId>
            <artifactId>opensilex-rest</artifactId>
            <version>${revision}</version>
            <scope>test</scope>
            <classifier>tests</classifier>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <!-- Generate swagger.json file -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven.exec.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.opensilex</groupId>
                        <artifactId>opensilex</artifactId>
                        <version>${revision}</version>
                    </dependency>
                </dependencies>
            </plugin>
            
            <!-- Generate TypeScript library from swagger.json file -->
            <plugin>
                <groupId>org.opensilex</groupId>
                <artifactId>opensilex-swagger-codegen-maven-plugin</artifactId>
                <version>${revision}</version>
            </plugin>
            
                  
            <!-- Allow to extends SPARQL deserializers --> 
            <plugin>
                <groupId>eu.somatik.serviceloader-maven-plugin</groupId>
                <artifactId>serviceloader-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>opensilex-sparql-services</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <services>
                                <param>org.opensilex.sparql.deserializer.SPARQLDeserializer</param>
                            </services>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.opensilex</groupId>
                        <artifactId>opensilex-sparql</artifactId>
                        <version>${revision}</version>
                    </dependency>
                </dependencies>
            </plugin>
    
            <!-- Check plugin and dependencies available updates -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${versions.maven.plugin.version}</version>
                <configuration>
                    <skip>${skipOutdated}</skip>
                    <rulesUri>classpath:///version-rules.xml</rulesUri>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.opensilex</groupId>
                        <artifactId>opensilex</artifactId>
                        <version>${revision}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
