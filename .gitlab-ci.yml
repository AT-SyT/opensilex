 
########################
##GLOBAL VARIABLES 
########################
variables:
 GIT_DEPTH: 5
 GIT_OPTIONS: "--allow-unrelated-histories"
 # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
 # when running from the command line.
 MAVEN_CLI_OPTS: "--batch-mode --show-version "
 BUILD_PATH: "opensilex-release/target/opensilex-release"
 # DEFAULT SERVER MAVEN VERSION
 MVN_VERSION: 3.6.3
 # DEFAULT SERVER JAVA VERSION
 JAVA_VERSION: 11
 RSYNC_INSTANCES_OPTIONS: "--progress --delete"
 RSYNC_INSTANCES_PATH: "/home/phis/opensilex-instances/bin"
 RSYNC_INSTANCES_DATA: "/home/phis/opensilex-instances/data"
 RSYNC_INSTANCES_LOGS: "/home/phis/opensilex-instances/logs"
 RSYNC_INSTANCES_LOGS_ARCHIVED: "/home/phis/opensilex-instances/logs/old"
 REVISION: 'INSTANCE-SNAPSHOT'
 DEV_TOOLS_CONFIGURATION_FILES_PATH: "$CI_PROJECT_DIR/opensilex-dev-tools"
 STOP_SERVER_OPTS: "--adminPort=$ADMIN_PORT --host=$REMOTE_SERVER_IP --CONFIG_FILE=$INSTANCE_CONFIGURATION_FILE_NAME"
 START_SERVER_OPTS: "--adminPort=$ADMIN_PORT --host=$REMOTE_SERVER_IP --port=$PORT --CONFIG_FILE=$INSTANCE_CONFIGURATION_FILE_NAME --DEBUG -d"
 # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
 # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
 MAVEN_CACHE_FOLDER: "$CI_PROJECT_DIR/.m2/repository"
 MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
 YARN_CACHE_FOLDER: "$CI_PROJECT_DIR/cache_yarn"
 NODE_CACHE: "$CI_PROJECT_DIR/opensilex-dev/.node"
 EMBDED_MONGO_CACHE: "/root/.embedmongo/"

########################
##  CACHE TEMPLATE
########################

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_BUILD_JOB_NAME"'
.cache_dependencies: &cache_dependencies
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - $YARN_CACHE_FOLDER
      - $MAVEN_CACHE_FOLDER
      - $NODE_CACHE
      - $EMBDED_MONGO_CACHE


########################
##  BUILD TEMPLATE
########################

.build:instance: &build_template_with_opensilex
  <<: *cache_dependencies
  before_script: 
    - |
      if [ ! -z "$COMMIT_SHA_OPENSILEX_DEV" ]; then
        git checkout $COMMIT_SHA_OPENSILEX_DEV
      fi
    - rm -r $CI_PROJECT_DIR/phis-ws
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@forgemia.inra.fr/OpenSILEX/phis-ws.git --branch modularity
    - |
      if [ ! -z "$COMMIT_SHA_PHIS" ]; then
        cd phis-ws
        git checkout $COMMIT_SHA_PHIS
        cd ..
      fi    
  stage: build
  image: maven:$MVN_VERSION-jdk-$JAVA_VERSION
  except:
    - schedules
  artifacts:
    expire_in: "3 week"


########################
##  DEPLOY OPENSILEX TEST TEMPLATE
########################

.deploy:opensilex:instance: &deploy_opensilex_template
  stage: deploy
  when: manual
  image: instrumentisto/rsync-ssh
  environment:
    url: http://$REMOTE_SERVER_IP:$PORT
  script:
    - apk add curl
    # Create directories
    - ls $CI_PROJECT_DIR/$REVISION
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@forgemia.inra.fr:OpenSILEX/opensilex-dev-tools.git
    - echo "Create directory ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}"
    - echo "Create directory ${RSYNC_INSTANCES_DATA}/${RSYNC_DIR}"
    - echo "Create directory ${RSYNC_INSTANCES_LOGS}"
    - echo "Create directory ${RSYNC_INSTANCES_LOGS_ARCHIVED}"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $RSYNC_USER@$REMOTE_SERVER_IP "mkdir -p ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}; mkdir -p ${RSYNC_INSTANCES_LOGS}; mkdir -p ${RSYNC_INSTANCES_LOGS_ARCHIVED}; mkdir -p $RSYNC_INSTANCES_DATA/${RSYNC_DIR};"
    - echo "Upload files"
    - rsync -arzv -e "ssh  -i ${HOME}/.ssh/id_rsa" $RSYNC_INSTANCES_OPTIONS  $CI_PROJECT_DIR/$REVISION/* $RSYNC_USER@$REMOTE_SERVER_IP:${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}
    - echo "scp -i ${HOME}/.ssh/id_rsa -o 'StrictHostKeyChecking no' ${CONFIGURATION_FILES_PATH}/* ${RSYNC_USER}@${REMOTE_SERVER_IP}:${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}"
    - scp -i ${HOME}/.ssh/id_rsa -o "StrictHostKeyChecking no" $CONFIGURATION_FILES_PATH/* $RSYNC_USER@$REMOTE_SERVER_IP:${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}
    - echo "Remove dependencies list cache"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $RSYNC_USER@$REMOTE_SERVER_IP "rm -f ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}/.opensilex.dependencies"
    - echo "Check files"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $RSYNC_USER@$REMOTE_SERVER_IP "ls ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR};"
    - echo "Restarting server with options ${START_SERVER_OPTS}"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $RSYNC_USER@$REMOTE_SERVER_IP "cd ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}; java -jar ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}/opensilex.jar server stop $STOP_SERVER_OPTS"
    - ssh -i ${HOME}/.ssh/id_rsa -p22 $RSYNC_USER@$REMOTE_SERVER_IP "cd ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}; java -jar ${RSYNC_INSTANCES_PATH}/${RSYNC_DIR}/opensilex.jar server start $START_SERVER_OPTS"
  except:
    - schedules    
    
# #########
# Arnaud
# #########

arnaud:build:
  <<: *build_template_with_opensilex
  script: 
    - mvn install $MAVEN_CLI_OPTS -Drevision=$REVISION
    - mv $BUILD_PATH/opensilex-release-$REVISION $CI_PROJECT_DIR/$REVISION
  artifacts:
    paths:
      - $CI_PROJECT_DIR/$REVISION
  only:
    - arnaud
    
    
###################################
##  ARNAUD-TEST-SNAPSHOT-DEPLOYMENT
###################################

test:arnaud:deploy:
  <<: *deploy_opensilex_before_script
  <<: *deploy_opensilex_template
  when: on_success  
  variables:
    RSYNC_USER: "phis"
    REMOTE_SERVER_IP: "138.102.159.37"
    RSYNC_DIR: "mistea/arnaud"
    CONFIGURATION_FILES_PATH: "$DEV_TOOLS_CONFIGURATION_FILES_PATH/mistea/arnaud"
    INSTANCE_CONFIGURATION_FILE_NAME: "phis.test.yml"
    SSH_KEY: "$TEST_SSH_PRIVATE_KEY"
    ADMIN_PORT: 4086
    PORT: 8086
    PROJECT_ID: 403
    BRANCH: arnaud
  only:
    - arnaud
  environment:
    name: arnaud-test
    url: http://138.102.159.37:8086
  needs:
    - arnaud:build
